pluginManagement {
    plugins {
        id "com.github.ben-manes.versions" version "0.20.0"
        id "com.github.kt3k.coveralls" version "2.0.1"
        id 'com.github.sherter.google-java-format' version "0.8"
        id "com.google.protobuf" version "0.8.8"
        id "com.jfrog.artifactory" version "4.13.0"
        id "io.morethan.jmhreport" version "0.9.0"
        id "me.champeau.gradle.jmh" version "0.5.0"
        id "net.ltgt.errorprone" version "0.8.1"
        id "ru.vyarus.animalsniffer" version "1.5.0"
    }

    repositories {
        gradlePluginPortal()
        google()
    }
}

rootProject.name = "opentelemetry-java"
include ":opentelemetry-all",
        ":opentelemetry-api",
        ":opentelemetry-context-prop",
        ":opentelemetry-contrib-runtime-metrics",
        ":opentelemetry-contrib-trace-propagators",
        ":opentelemetry-contrib-trace-utils",
        ":opentelemetry-exporters-fluent",
        ":opentelemetry-exporters-inmemory",
        ":opentelemetry-exporters-jaeger",
        ":opentelemetry-exporters-logging",
        ":opentelemetry-exporters-otlp",
        ":opentelemetry-exporters-prometheus",
        ":opentelemetry-opentracing-shim",
        ":opentelemetry-proto",
        ":opentelemetry-sdk",
        ":opentelemetry-sdk-contrib-async-processor",
        ":opentelemetry-sdk-contrib-auto-config",
        ":opentelemetry-sdk-contrib-aws-v1-support",
        ":opentelemetry-sdk-contrib-otproto",
        ":opentelemetry-sdk-contrib-testbed",
        ":opentelemetry-sdk-contrib-jaeger-remote-sampler"

rootProject.children.each {
    it.projectDir = "$rootDir/" + it.name
        .replace("opentelemetry-exporters-", "exporters/")
        .replace("opentelemetry-contrib-", "contrib/")
        .replace("opentelemetry-sdk-contrib-", "sdk_contrib/")
        .replace("opentelemetry-", "")
        .replace("-", "_") as File
}
